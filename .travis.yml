# Copyright (c) 2020 Red Hat, Inc.
# Copyright Contributors to the Open Cluster Management project

os:
  - linux

language: go
go:
  - 1.17.x

services:
  - docker

addons:
  sonarcloud:
    organization: "open-cluster-management"
    token:
      secure: "WNHQXU5Rx3rpXF8H3K7YBSXzdrPRc4n2GXiH7u3BhOeCti0T5I2eniqsIPopG+SsV6wJi/x1pO5GOUYXpGg4l7KXpHcMQQmxOWmVlCCItD1c96OPejpjKYTiewjHb0zqyy8yBHblCu9SNhNPsXsbGp712B1uCF6cC2el+a3b5Wses4NvSUNEAifepmdJ3TqNmZVH2sFGqFP3scA4cg8oy8bctxZF/S7GqsdKHtwt+aeI+iAlobMgBvfgONuB6u6c3nU0nLlS7FhvtE3nuM1TAzCO7Xxf6MeWvoku3G7wN8vhMCsW1s+7eqC1TB/tuMHABk4Hz268xcDjJWL67WFABT56zabSnGwph6KpKJXRkUNFjwhKLCY/b2Bihxgp6wQhpUV1tU+Y1LqaL1DhUhUx8ovugiME1h0D9K4FiFChAnm3d1zr3m9cHtZjhoEv9e4QYV41FHqVMiz9hmeFEVTSmWOZuXH4ElGYujDBXKEAp9+bEaCrcWIX/orBSkCmQEAl7mROg4EMp/e2bGmYRqHz1U96U9lIbLxWCVgZwCjf2sBetAFTeHL2/vtbffrQHfiXJwhYiOv7g6+ybHC8lltrysKOJacD8c7pW+qo3/vTeE1hMeRwgwBPi5pLwiL+UFVdCiX16md3hTFhD+2FgEjisDGrNz//ZxEznm+yr8J+mzE="

branches:
  only:
    - main
    - /^release-[0-9]+\..*$/

env:
  global:
    # Required
    - OS=linux
    - COMPONENT_TAG_EXTENSION="-${TRAVIS_COMMIT}"

    # Component Specific
    - COMPONENT_DEPLOY_COMMAND=${TRAVIS_BUILD_DIR}/build/deploy-to-cluster.sh
    - COMPONENT_INIT_COMMAND=${TRAVIS_BUILD_DIR}/build/install-dependencies.sh
    - COMPONENT_BUILD_COMMAND=${TRAVIS_BUILD_DIR}/build/build.sh
    - COMPONENT_UNIT_TEST_COMMAND=${TRAVIS_BUILD_DIR}/build/run-unit-tests.sh
    - COMPONENT_E2E_TEST_COMMAND=${TRAVIS_BUILD_DIR}/build/run-e2e-tests.sh

    - DEPLOYED_IN_HUB=true # For sonar
    - GO111MODULE=on

cache:
  directories:
    - "/home/travis/gopath/pkg/mod"

stages:
  - build
  - unit-test
  - test-e2e
  - release-ff
  - publish

before_script:
  # Bootstrap the build harness.
  - make
  # Set the image tag differently for PRs.
  - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;

jobs:
  include:
    - stage: build
      name: "Build the image and push to repo"
      script:
        - make component/build
        - make component/push

    - stage: unit-test
      name: "Run lint, unit tests, sonar, and security scans"
      script:
        # Run lint and unit tests.
        - make component/test/unit
        - make sonar/go 
        - make security/scans

    - stage: test-e2e
      name: "Run e2e tests"
      if: type = pull_request
      script:
        # Run e2e tests.
        - make component/pull
        - make component/test/e2e

    - stage: release-ff
      name: "Push commits to current release branch"
      if: type = push AND branch =~ /^main$/
      script:
        - make release-ff

    - stage: publish
      name: "Publish the image to quay with an official version/sha tag and publish entry to integration pipeline stage"
      if: type = push AND branch =~ /^release-[0-9]+\..*$/
      script:
        - make pipeline-manifest/update PIPELINE_MANIFEST_COMPONENT_SHA256=${TRAVIS_COMMIT} PIPELINE_MANIFEST_COMPONENT_REPO=${TRAVIS_REPO_SLUG} PIPELINE_MANIFEST_BRANCH=${TRAVIS_BRANCH}
